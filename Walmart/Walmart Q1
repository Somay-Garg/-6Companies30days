class Solution {
public:
    double maxProbability(int n, vector<vector<int>>& edges, vector<double>& succProb, int start, int end) {
        vector<vector<pair<int,double>>>adjList(n);
        double ans=0;
        for(int i=0;i<edges.size();i++){
            adjList[edges[i][0]].push_back({edges[i][1],succProb[i]});
            adjList[edges[i][1]].push_back({edges[i][0],succProb[i]});
        }
        priority_queue<pair<double,int>>pq;
        vector<double>prob(n+1,0);
        pq.push({1,start});
        while(!pq.empty()){
            auto top = pq.top();
            pq.pop();
            for(auto it=adjList[top.second].begin();it<adjList[top.second].end();it++){
                if(top.first*it->second>prob[it->first]){
                    prob[it->first] = top.first*it->second;
                    pq.push({prob[it->first],it->first});
                }
            }
        }
        return prob[end];
    }
};
