class Solution
{
    long long power(long long x, long long y, long long mod)
    {
        long long ans = 1ll;
        while (y > 0) {
            if (y & 1)
                ans = (ans * x) % mod;
            y = y >> 1;
            x = (x * x) % mod;
        }
        return ans;
    }
  public:
    int kvowelwords(int n, int k) {
        vector<vector<long long>>dp(n+1,vector<long long>(k+1,0));
        long long sum=1;
        long long mod = 1000000007;
        for(int i=1;i<=n;i++){
            dp[i][0] = sum*21;
            dp[i][0] %= mod;
            
            sum = dp[i][0];
            for(int j=1;j<=k;j++){
                if(i<j){
                    dp[i][j] = 0;
                }else if(i==j){
                    dp[i][j] = power(5,i,mod);
                }else{
                    dp[i][j] = dp[i-1][j-1]*5;
                }
                dp[i][j]%=mod;
                sum+=dp[i][j];
                sum%=mod;
            }
        }
        return sum;
    }
};
