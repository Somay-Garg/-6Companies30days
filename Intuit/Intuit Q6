class Solution {
public:
    int findInMountainArray(int target, MountainArray &mountainArr) {
        int mountEle=0;
        int l=0,h=mountainArr.length()-1,mid,midMount;
        while(l!=h){
            mid = l + (h-l)/2;
            midMount = mountainArr.get(mid);
            if(midMount<mountainArr.get(mid+1)){
                l=mid+1;
            }else if(midMount>mountainArr.get(mid+1)){
                h=mid;
            }
        }
        int peak=l;
        int ans = -1;
        l=0;
        h=peak;
        while(l<=h){
            mid = l+(h-l)/2;
            midMount = mountainArr.get(mid);
            if(midMount==target){
                ans = mid;
                break;
            }else if(midMount<target){
                l=mid+1;
            }else{
                h=mid-1;
            }
        }
        if(ans!=-1){
            return ans; 
        }else{
            l=peak+1;
            h=mountainArr.length()-1;
            while(l<=h){
                mid = l+(h-l)/2;
                midMount = mountainArr.get(mid);
                if(midMount==target){
                    ans = mid;
                    break;
                }else if(midMount<target){
                    h=mid-1;
                }else{
                    l=mid+1;
                }
            }
            return ans;
        }            
    }
};
