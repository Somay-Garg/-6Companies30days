class Solution
{   
    public: 
    vector<int> spirallyTraverse(vector<vector<int> > matrix, int r, int c) 
    {
        vector<int>ans;
        int minr = 0, minc = 0, maxr = r-1, maxc = c-1;
        int total = r*c, count=0;
        while(count<total){
            for(int i = minr, j=minc; j<=maxc && count<total; j++){
                ans.push_back(matrix[i][j]);
                count++;
            }
            minr++;
            for(int j = maxc, i = minr; i<=maxr && count<total; i++){
                ans.push_back(matrix[i][j]);
                count++;
            }
            maxc--;
            for(int i = maxr, j = maxc; j>=minc && count<total; j--){
                ans.push_back(matrix[i][j]);
                count++;
            }
            maxr--;
            for(int j = minc, i = maxr; i>=minr && count<total; i--){
                ans.push_back(matrix[i][j]);
                count++;
            }
            minc++;
        }
        return ans;
    }
};
