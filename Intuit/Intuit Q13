class Solution {
public:
    int minSwaps(vector<vector<int>>& grid) {
        int n = grid.size();
        vector<int>maxRight(n);
        int k=0;
        int swaps=0;
        for(int i=0;i<n;i++){
            int count=0;
            int j=n-1;
            while(j>=0&&grid[i][j]==0){
                count++;
                j--;
            }
            maxRight[k++]=count;
        }
        for(int i=0;i<n;i++){
            int j = n-i-1;
            for(k=i;k<n;k++){
                if(maxRight[k]>=j){
                    break;
                }
            }
            if(k==n){
                return -1;
            }
            for(int l=k;l>i;l--){
                swap(maxRight[l-1],maxRight[l]);
            }
            swaps+=k-i;
        }
        return swaps;
    }
};
