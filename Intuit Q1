class Solution{
  public:
	int minDifference(int A[], int n)  {
        int sum=accumulate(A,A+n,0);
        vector<vector<bool>>dp(n+1,vector<bool>(sum+1,0));
        for(int i=0;i<=n;i++){
            for(int j=0;j<=sum;j++){
                if(j==0){
                    dp[i][j]=1;
                }else if(i==0){
                    continue;
                }else if(A[i-1]>j){
                    dp[i][j]=dp[i-1][j];
                }else{
                    dp[i][j]=(dp[i-1][j]||dp[i-1][j-A[i-1]]);
                }
            }
        }
        int mini=INT_MAX,val1,val2;
        for(int i=0;i<=sum/2;i++){
            val1=i;
            val2=sum-i;
            if(dp[n][i]==1&&mini>abs(val1-val2)){
                mini=abs(val1-val2);
            }
        }
        return mini;
	}
};
