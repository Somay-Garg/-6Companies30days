class Solution {
public:
    bool stoneGame(vector<int>& piles) {
            //using dp
        // int n = piles.size();
        // vector<vector<int>>dp(n,vector<int>(n));
        // for(int g=0;g<n;g++){
        //     for(int i=0,j=g;j<n;i++,j++){
        //         if(g==0){
        //             dp[i][j]=piles[i];
        //         }else if(g==1){
        //             dp[i][j]=max(piles[i],piles[j]);
        //         }else{
        //             int a = piles[i]+min(dp[i+1][j-1],dp[i+2][j]);
        //             int b = piles[j]+min(dp[i][j-2],dp[i+1][j-1]);
        //             dp[i][j] = max(a,b);
        //         }
        //     }
        // }
        // return dp[0][n-1]>=dp[0][n-2];
        
            //Mathematical Logic
        return true;
    }
};
