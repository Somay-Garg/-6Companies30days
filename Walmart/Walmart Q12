class Solution {
public:
    vector<int> recoverArray(int n, vector<int>& sums) {
        vector<int>ans;
        sort(sums.begin(),sums.end());
        for(int i=0;i<n;i++){
            int diff = sums[1]-sums[0];
            unordered_map<int,int>mp;
            vector<int>s1,s2;
            bool flag = false;
            for(int i=0;i<sums.size();i++){
                if(!mp[sums[i]]){
                    s1.push_back(sums[i]);
                    mp[sums[i]+diff]++;
                    if(sums[i]==0){
                        flag = true;
                    }
                }else{
                    s2.push_back(sums[i]);
                    mp[sums[i]]--;
                }
            }
            if(flag){
                ans.push_back(diff);
                sums=s1;
            }else{
                ans.push_back(-1*diff);
                sums=s2;
            }
        }
        return ans;
    }
};
